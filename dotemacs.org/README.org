Welcome to my dotemacs lab :)

I'm learning emacs and elisp by playing around with dot file configs
and otherwise having a look at how other people set up their files.

* contents

What you'll find here is:
+ one teeny tiny init.el file, and
+ one large, flat org file (dotemacs.org) that gets called by
  init.el.  This in turn can call other files (but I try and avoid that).
+ one wired up submodule of John Wiegley's emacs dot files.
+ several unwired-up repositories of other well-maintained emacs dot files.

Within dotemacs.org you will find:
+ a startup process that works for me.
+ a column view mode that lets you quickly turn bits of code off and
  on via the tangle property. C-c C-x C-c is really how you should
  view this file.
+ some org-tables and some code to convert said tables into code for
  settings and bindings. I have used this to bust up my old init.el
  and to muck around with new bindings and settings. 
+ I started out with the usual mishmash of hundreds of miscellaneous
  settings and uncategorised defuns. There may be a few still lurking
  in there somewhere.
+ the jwiegley init.el code busted up into separate headers, and in
  various stages of being subject to a light editing for my personal
  needs.

* setup

  I'm not sure how this would work for someone else.  If anyone ever
  wants to try, let me know.

* org-mode

The use of org-mode as the lab is what separates this
dotemacs from other (perhaps more rigorous) patterns.  Org-mode is used:
+ as a literate programming environment
+ for its ease of header manipulation, its column view and tangling ability. If you haven'n tried it
  yet, go to the top of the file and hit C-c C-x C-c. Turning on and
  off, adding and subtracting code requires a simple edit of the
  tangle property.
+ for org-tables. The init.el file is data and much of this data
  belongs in a table. Where it makes sense, we place data in a table,
  often with a toggle to again turn things on and off. Babel then
  takes care of turning the table into code.  Simple as C-c C-v t.  

* other dotemacs repos

I have many dotemacs repos as submodules. If you know of others that
should be added to (or deleted from) the list, please let me know.

** why?

So if I'm looking at ways grep is used (say), I can grep the repos
directory and see instantly how it's being used:

+ starter kit recommends and binds rgrep to C-x C-r
+ jwiegley uses a grep-ed package and binds grep, and find-grep (but
  not rgrep). there is also a package called color-moccur makes heavy use of
  greppy things.
+ (what I was looking for!!!), there is a 'writable' grep buffer for
  those pesky global refactoring name changes
  ;;; wgrep.el --- Writable grep buffer and apply the changes to files
+ magnars has a full-screen grep thing that looks pretty funnky.



** current list

| repo                | git                                              |
|---------------------+--------------------------------------------------|
| jwiegley            | https://github.com/jwiegley/dot-emacs            |
| emacs24-starter-kit | https://github.com/eschulte/emacs24-starter-kit  |
| prelude             | https://github.com/bbatsov/prelude               |
| emacs-live          | https://github.com/overtone/emacs-live           |
| defunkt             | https://github.com/defunkt/emacs                 |
| cabbage             | https://github.com/senny/cabbage                 |
| purcell             | https://github.com/purcell/emacs.d               |
| magnars             | https://github.com/magnars/.emacs.d              |
| ghoseb              | https://github.com/ghoseb/dotemacs               |
| rmm5t               | https://github.com/rmm5t/dotfiles                |
| alexott             | https://github.com/alexott/emacs-configs         |
| starter-kit         | https://github.com/technomancy/emacs-starter-kit |
| dwamacs             | https://github.com/dabrahams/dwamacs.git         |
|                     |                                                  |






